#!/bin/sh
#
# An example hook script for the "post-receive" event.
#
# The "post-receive" script is run after receive-pack has accepted a pack
# and the repository has been updated.  It is passed arguments in through
# stdin in the form
#  <oldrev> <newrev> <refname>
# For example:
#  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master
#
# see contrib/hooks/ for a sample, or uncomment the next line and
# rename the file to "post-receive".
#
# AZ:
# Deploy app
#

VERSION_JSON=version.json
DEPLOY_BASE_DIR=/var/www/eck-zimmer.at/apps/timetracker.rest
SYMLINK=$DEPLOY_BASE_DIR/app
CONFIG_SRC=$DEPLOY_BASE_DIR/config
CONFIG_DEST=$DEPLOY_DIR/config

TMP_DIR=`mktemp -d`
git archive HEAD | tar x -C $TMP_DIR
cd $TMP_DIR
cd backend/app
find -type f -name '.gitignore' -exec rm {} \;
npm install --production
mv $TMP_DIR/backend/node_modules/ $TMP_DIR/backend/app/

# add version file
VERSION=`cat ../package.json | grep \"version\" | perl -p -e 's/^.*version.*\b(\d+\.\d+\.\d+)\b.*$/\1/g;'`
echo '{' >${VERSION_JSON}
echo "  \"version\": \"$VERSION\"" >>${VERSION_JSON}
echo '}' >>${VERSION_JSON}
echo "------------------------------------"
echo "Extracted version: $a"
echo "Written version file ${VERSION.JSON}"
echo "------------------------------------"

# now copy the app as is into the app directory
ts=`date '+%Y%m%d-%H%M%S'`
DEPLOY_DIR=$DEPLOY_BASE_DIR/$ts
mkdir $DEPLOY_DIR
echo "Deploying to $DEPLOY_DIR ..."
cp -r . $DEPLOY_DIR

# add config file
echo "Copying config files"
cp -r $CONFIG_SRC/* $CONFIG_DEST/

echo "Adapting symlink to current app version"
rm $SYMLINK
ln -s $DEPLOY_DIR $SYMLINK

echo Removing tmp dir [$TMP_DIR]
rm -fr $TMP_DIR

echo RESTARTING instance
sudo service timetracker restart
exit 0
